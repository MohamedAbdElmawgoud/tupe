{"version":3,"sources":["node_modules/@angular/youtube-player/fesm2015/youtube-player.js"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, NgZone, Optional, Inject, PLATFORM_ID, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Subject, of, combineLatest, pipe, Observable, merge } from 'rxjs';\nimport { take, startWith, combineLatest as combineLatest$1, skipWhile, map, scan, distinctUntilChanged, flatMap, takeUntil, publish, withLatestFrom, filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/youtube-player/youtube-player.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_PLAYER_WIDTH = 640;\n/** @type {?} */\nconst DEFAULT_PLAYER_HEIGHT = 390;\n/**\n * @record\n */\nfunction Player() { }\nif (false) {\n    /** @type {?|undefined} */\n    Player.prototype.videoId;\n}\n/**\n * Object used to store the state of the player if the\n * user tries to interact with the API before it has been loaded.\n * @record\n */\nfunction PendingPlayerState() { }\nif (false) {\n    /** @type {?|undefined} */\n    PendingPlayerState.prototype.playbackState;\n    /** @type {?|undefined} */\n    PendingPlayerState.prototype.playbackRate;\n    /** @type {?|undefined} */\n    PendingPlayerState.prototype.volume;\n    /** @type {?|undefined} */\n    PendingPlayerState.prototype.muted;\n    /** @type {?|undefined} */\n    PendingPlayerState.prototype.seek;\n}\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\nclass YouTubePlayer {\n    /**\n     * @param {?} _ngZone\n     * @param {?=} platformId\n     */\n    constructor(_ngZone, \n    /**\n     * @deprecated `platformId` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platformId) {\n        this._ngZone = _ngZone;\n        this._videoId = new BehaviorSubject(undefined);\n        this._height = new BehaviorSubject(DEFAULT_PLAYER_HEIGHT);\n        this._width = new BehaviorSubject(DEFAULT_PLAYER_WIDTH);\n        this._startSeconds = new BehaviorSubject(undefined);\n        this._endSeconds = new BehaviorSubject(undefined);\n        this._suggestedQuality = new BehaviorSubject(undefined);\n        /**\n         * Outputs are direct proxies from the player itself.\n         */\n        this.ready = new EventEmitter();\n        this.stateChange = new EventEmitter();\n        this.error = new EventEmitter();\n        this.apiChange = new EventEmitter();\n        this.playbackQualityChange = new EventEmitter();\n        this.playbackRateChange = new EventEmitter();\n        this._youtubeContainer = new Subject();\n        this._destroyed = new Subject();\n        // @breaking-change 10.0.0 Remove null check for `platformId`.\n        this._isBrowser =\n            platformId ? isPlatformBrowser(platformId) : typeof window === 'object' && !!window;\n    }\n    /**\n     * YouTube Video ID to view\n     * @return {?}\n     */\n    get videoId() { return this._videoId.value; }\n    /**\n     * @param {?} videoId\n     * @return {?}\n     */\n    set videoId(videoId) {\n        this._videoId.next(videoId);\n    }\n    /**\n     * Height of video player\n     * @return {?}\n     */\n    get height() { return this._height.value; }\n    /**\n     * @param {?} height\n     * @return {?}\n     */\n    set height(height) {\n        this._height.next(height || DEFAULT_PLAYER_HEIGHT);\n    }\n    /**\n     * Width of video player\n     * @return {?}\n     */\n    get width() { return this._width.value; }\n    /**\n     * @param {?} width\n     * @return {?}\n     */\n    set width(width) {\n        this._width.next(width || DEFAULT_PLAYER_WIDTH);\n    }\n    /**\n     * The moment when the player is supposed to start playing\n     * @param {?} startSeconds\n     * @return {?}\n     */\n    set startSeconds(startSeconds) {\n        this._startSeconds.next(startSeconds);\n    }\n    /**\n     * The moment when the player is supposed to stop playing\n     * @param {?} endSeconds\n     * @return {?}\n     */\n    set endSeconds(endSeconds) {\n        this._endSeconds.next(endSeconds);\n    }\n    /**\n     * The suggested quality of the player\n     * @param {?} suggestedQuality\n     * @return {?}\n     */\n    set suggestedQuality(suggestedQuality) {\n        this._suggestedQuality.next(suggestedQuality);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Don't do anything if we're not in a browser environment.\n        if (!this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        let iframeApiAvailableObs = of(true);\n        if (!window.YT) {\n            if (this.showBeforeIframeApiLoads) {\n                throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' +\n                    'Please install the YouTube Player API Reference for iframe Embeds: ' +\n                    'https://developers.google.com/youtube/iframe_api_reference');\n            }\n            /** @type {?} */\n            const iframeApiAvailableSubject = new Subject();\n            this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n            window.onYouTubeIframeAPIReady = (/**\n             * @return {?}\n             */\n            () => {\n                if (this._existingApiReadyCallback) {\n                    this._existingApiReadyCallback();\n                }\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => iframeApiAvailableSubject.next(true)));\n            });\n            iframeApiAvailableObs = iframeApiAvailableSubject.pipe(take(1), startWith(false));\n        }\n        // An observable of the currently loaded player.\n        /** @type {?} */\n        const playerObs = createPlayerObservable(this._youtubeContainer, this._videoId, iframeApiAvailableObs, this._width, this._height, this.createEventsBoundInZone(), this._ngZone).pipe(waitUntilReady((/**\n         * @param {?} player\n         * @return {?}\n         */\n        player => {\n            // Destroy the player if loading was aborted so that we don't end up leaking memory.\n            if (!playerIsReady(player)) {\n                player.destroy();\n            }\n        })), takeUntil(this._destroyed), publish());\n        // Set up side effects to bind inputs to the player.\n        playerObs.subscribe((/**\n         * @param {?} player\n         * @return {?}\n         */\n        player => {\n            this._player = player;\n            if (player && this._pendingPlayerState) {\n                this._initializePlayer(player, this._pendingPlayerState);\n            }\n            this._pendingPlayerState = undefined;\n        }));\n        bindSizeToPlayer(playerObs, this._width, this._height);\n        bindSuggestedQualityToPlayer(playerObs, this._suggestedQuality);\n        bindCueVideoCall(playerObs, this._videoId, this._startSeconds, this._endSeconds, this._suggestedQuality, this._destroyed);\n        // After all of the subscriptions are set up, connect the observable.\n        ((/** @type {?} */ (playerObs))).connect();\n    }\n    /**\n     * @return {?}\n     */\n    createEventsBoundInZone() {\n        /** @type {?} */\n        const output = {};\n        /** @type {?} */\n        const events = new Map([\n            ['onReady', this.ready],\n            ['onStateChange', this.stateChange],\n            ['onPlaybackQualityChange', this.playbackQualityChange],\n            ['onPlaybackRateChange', this.playbackRateChange],\n            ['onError', this.error],\n            ['onApiChange', this.apiChange]\n        ]);\n        events.forEach((/**\n         * @param {?} emitter\n         * @param {?} name\n         * @return {?}\n         */\n        (emitter, name) => {\n            // Since these events all trigger change detection, only bind them if something is subscribed.\n            if (emitter.observers.length) {\n                output[name] = this._runInZone((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => emitter.emit(event)));\n            }\n        }));\n        return output;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._youtubeContainer.next(this.youtubeContainer.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._player) {\n            this._player.destroy();\n            window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n        }\n        this._videoId.complete();\n        this._height.complete();\n        this._width.complete();\n        this._startSeconds.complete();\n        this._endSeconds.complete();\n        this._suggestedQuality.complete();\n        this._youtubeContainer.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} callback\n     * @return {?}\n     */\n    _runInZone(callback) {\n        return (/**\n         * @param {...?} args\n         * @return {?}\n         */\n        (...args) => this._ngZone.run((/**\n         * @return {?}\n         */\n        () => callback(...args))));\n    }\n    /** Proxied methods. */\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#playVideo\n     * @return {?}\n     */\n    playVideo() {\n        if (this._player) {\n            this._player.playVideo();\n        }\n        else {\n            this._getPendingState().playbackState = 1 /* PLAYING */;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#pauseVideo\n     * @return {?}\n     */\n    pauseVideo() {\n        if (this._player) {\n            this._player.pauseVideo();\n        }\n        else {\n            this._getPendingState().playbackState = 2 /* PAUSED */;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#stopVideo\n     * @return {?}\n     */\n    stopVideo() {\n        if (this._player) {\n            this._player.stopVideo();\n        }\n        else {\n            // It seems like YouTube sets the player to CUED when it's stopped.\n            this._getPendingState().playbackState = 5 /* CUED */;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#seekTo\n     * @param {?} seconds\n     * @param {?} allowSeekAhead\n     * @return {?}\n     */\n    seekTo(seconds, allowSeekAhead) {\n        if (this._player) {\n            this._player.seekTo(seconds, allowSeekAhead);\n        }\n        else {\n            this._getPendingState().seek = { seconds, allowSeekAhead };\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#mute\n     * @return {?}\n     */\n    mute() {\n        if (this._player) {\n            this._player.mute();\n        }\n        else {\n            this._getPendingState().muted = true;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#unMute\n     * @return {?}\n     */\n    unMute() {\n        if (this._player) {\n            this._player.unMute();\n        }\n        else {\n            this._getPendingState().muted = false;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#isMuted\n     * @return {?}\n     */\n    isMuted() {\n        if (this._player) {\n            return this._player.isMuted();\n        }\n        if (this._pendingPlayerState) {\n            return !!this._pendingPlayerState.muted;\n        }\n        return false;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#setVolume\n     * @param {?} volume\n     * @return {?}\n     */\n    setVolume(volume) {\n        if (this._player) {\n            this._player.setVolume(volume);\n        }\n        else {\n            this._getPendingState().volume = volume;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVolume\n     * @return {?}\n     */\n    getVolume() {\n        if (this._player) {\n            return this._player.getVolume();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n            return this._pendingPlayerState.volume;\n        }\n        return 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     * @param {?} playbackRate\n     * @return {?}\n     */\n    setPlaybackRate(playbackRate) {\n        if (this._player) {\n            return this._player.setPlaybackRate(playbackRate);\n        }\n        else {\n            this._getPendingState().playbackRate = playbackRate;\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate\n     * @return {?}\n     */\n    getPlaybackRate() {\n        if (this._player) {\n            return this._player.getPlaybackRate();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n            return this._pendingPlayerState.playbackRate;\n        }\n        return 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates\n     * @return {?}\n     */\n    getAvailablePlaybackRates() {\n        return this._player ? this._player.getAvailablePlaybackRates() : [];\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction\n     * @return {?}\n     */\n    getVideoLoadedFraction() {\n        return this._player ? this._player.getVideoLoadedFraction() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlayerState\n     * @return {?}\n     */\n    getPlayerState() {\n        if (!this._isBrowser || !window.YT) {\n            return undefined;\n        }\n        if (this._player) {\n            return this._player.getPlayerState();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n            return this._pendingPlayerState.playbackState;\n        }\n        return -1 /* UNSTARTED */;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime\n     * @return {?}\n     */\n    getCurrentTime() {\n        if (this._player) {\n            return this._player.getCurrentTime();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n            return this._pendingPlayerState.seek.seconds;\n        }\n        return 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality\n     * @return {?}\n     */\n    getPlaybackQuality() {\n        return this._player ? this._player.getPlaybackQuality() : 'default';\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels\n     * @return {?}\n     */\n    getAvailableQualityLevels() {\n        return this._player ? this._player.getAvailableQualityLevels() : [];\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getDuration\n     * @return {?}\n     */\n    getDuration() {\n        return this._player ? this._player.getDuration() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl\n     * @return {?}\n     */\n    getVideoUrl() {\n        return this._player ? this._player.getVideoUrl() : '';\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode\n     * @return {?}\n     */\n    getVideoEmbedCode() {\n        return this._player ? this._player.getVideoEmbedCode() : '';\n    }\n    /**\n     * Gets an object that should be used to store the temporary API state.\n     * @private\n     * @return {?}\n     */\n    _getPendingState() {\n        if (!this._pendingPlayerState) {\n            this._pendingPlayerState = {};\n        }\n        return this._pendingPlayerState;\n    }\n    /**\n     * Initializes a player from a temporary state.\n     * @private\n     * @param {?} player\n     * @param {?} state\n     * @return {?}\n     */\n    _initializePlayer(player, state) {\n        const { playbackState, playbackRate, volume, muted, seek } = state;\n        switch (playbackState) {\n            case 1 /* PLAYING */:\n                player.playVideo();\n                break;\n            case 2 /* PAUSED */:\n                player.pauseVideo();\n                break;\n            case 5 /* CUED */:\n                player.stopVideo();\n                break;\n        }\n        if (playbackRate != null) {\n            player.setPlaybackRate(playbackRate);\n        }\n        if (volume != null) {\n            player.setVolume(volume);\n        }\n        if (muted != null) {\n            muted ? player.mute() : player.unMute();\n        }\n        if (seek != null) {\n            player.seekTo(seek.seconds, seek.allowSeekAhead);\n        }\n    }\n}\nYouTubePlayer.decorators = [\n    { type: Component, args: [{\n                selector: 'youtube-player',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                // This div is *replaced* by the YouTube player embed.\n                template: '<div #youtubeContainer></div>'\n            }] }\n];\n/** @nocollapse */\nYouTubePlayer.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\nYouTubePlayer.propDecorators = {\n    videoId: [{ type: Input }],\n    height: [{ type: Input }],\n    width: [{ type: Input }],\n    startSeconds: [{ type: Input }],\n    endSeconds: [{ type: Input }],\n    suggestedQuality: [{ type: Input }],\n    showBeforeIframeApiLoads: [{ type: Input }],\n    ready: [{ type: Output }],\n    stateChange: [{ type: Output }],\n    error: [{ type: Output }],\n    apiChange: [{ type: Output }],\n    playbackQualityChange: [{ type: Output }],\n    playbackRateChange: [{ type: Output }],\n    youtubeContainer: [{ type: ViewChild, args: ['youtubeContainer',] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._videoId;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._startSeconds;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._endSeconds;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._suggestedQuality;\n    /**\n     * Whether the iframe will attempt to load regardless of the status of the api on the\n     * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n     * set on the global window.\n     * @type {?}\n     */\n    YouTubePlayer.prototype.showBeforeIframeApiLoads;\n    /**\n     * Outputs are direct proxies from the player itself.\n     * @type {?}\n     */\n    YouTubePlayer.prototype.ready;\n    /** @type {?} */\n    YouTubePlayer.prototype.stateChange;\n    /** @type {?} */\n    YouTubePlayer.prototype.error;\n    /** @type {?} */\n    YouTubePlayer.prototype.apiChange;\n    /** @type {?} */\n    YouTubePlayer.prototype.playbackQualityChange;\n    /** @type {?} */\n    YouTubePlayer.prototype.playbackRateChange;\n    /**\n     * The element that will be replaced by the iframe.\n     * @type {?}\n     */\n    YouTubePlayer.prototype.youtubeContainer;\n    /**\n     * Whether we're currently rendering inside a browser.\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._isBrowser;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._youtubeContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._player;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._existingApiReadyCallback;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._pendingPlayerState;\n    /**\n     * @type {?}\n     * @private\n     */\n    YouTubePlayer.prototype._ngZone;\n}\n/**\n * Listens to changes to the given width and height and sets it on the player.\n * @param {?} playerObs\n * @param {?} widthObs\n * @param {?} heightObs\n * @return {?}\n */\nfunction bindSizeToPlayer(playerObs, widthObs, heightObs) {\n    return combineLatest([playerObs, widthObs, heightObs])\n        .subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, width, height]) => player && player.setSize(width, height)));\n}\n/**\n * Listens to changes from the suggested quality and sets it on the given player.\n * @param {?} playerObs\n * @param {?} suggestedQualityObs\n * @return {?}\n */\nfunction bindSuggestedQualityToPlayer(playerObs, suggestedQualityObs) {\n    return combineLatest([\n        playerObs,\n        suggestedQualityObs\n    ]).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, suggestedQuality]) => player && suggestedQuality && player.setPlaybackQuality(suggestedQuality)));\n}\n/**\n * Returns an observable that emits the loaded player once it's ready. Certain properties/methods\n * won't be available until the iframe finishes loading.\n * @param {?} onAbort Callback function that will be invoked if the player loading was aborted before\n * it was able to complete. Can be used to clean up any loose references.\n * @return {?}\n */\nfunction waitUntilReady(onAbort) {\n    return flatMap((/**\n     * @param {?} player\n     * @return {?}\n     */\n    player => {\n        if (!player) {\n            return of(undefined);\n        }\n        if (playerIsReady(player)) {\n            return of((/** @type {?} */ (player)));\n        }\n        // Since removeEventListener is not on Player when it's initialized, we can't use fromEvent.\n        // The player is not initialized fully until the ready is called.\n        return new Observable((/**\n         * @param {?} emitter\n         * @return {?}\n         */\n        emitter => {\n            /** @type {?} */\n            let aborted = false;\n            /** @type {?} */\n            let resolved = false;\n            /** @type {?} */\n            const onReady = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                resolved = true;\n                if (!aborted) {\n                    event.target.removeEventListener('onReady', onReady);\n                    emitter.next(event.target);\n                }\n            });\n            player.addEventListener('onReady', onReady);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                aborted = true;\n                if (!resolved) {\n                    onAbort(player);\n                }\n            });\n        })).pipe(take(1), startWith(undefined));\n    }));\n}\n/**\n * Create an observable for the player based on the given options.\n * @param {?} youtubeContainer\n * @param {?} videoIdObs\n * @param {?} iframeApiAvailableObs\n * @param {?} widthObs\n * @param {?} heightObs\n * @param {?} events\n * @param {?} ngZone\n * @return {?}\n */\nfunction createPlayerObservable(youtubeContainer, videoIdObs, iframeApiAvailableObs, widthObs, heightObs, events, ngZone) {\n    /** @type {?} */\n    const playerOptions = videoIdObs\n        .pipe(withLatestFrom(combineLatest([widthObs, heightObs])), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([videoId, [width, height]]) => videoId ? ({ videoId, width, height, events }) : undefined)));\n    return combineLatest([youtubeContainer, playerOptions, of(ngZone)])\n        .pipe(skipUntilRememberLatest(iframeApiAvailableObs), scan(syncPlayerState, undefined), distinctUntilChanged());\n}\n/**\n * Skips the given observable until the other observable emits true, then emit the latest.\n * @template T\n * @param {?} notifier\n * @return {?}\n */\nfunction skipUntilRememberLatest(notifier) {\n    return pipe(combineLatest$1(notifier), skipWhile((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([_, doneSkipping]) => !doneSkipping)), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value]) => value)));\n}\n/**\n * Destroy the player if there are no options, or create the player if there are options.\n * @param {?} player\n * @param {?} __1\n * @return {?}\n */\nfunction syncPlayerState(player, [container, videoOptions, ngZone]) {\n    if (!videoOptions) {\n        if (player) {\n            player.destroy();\n        }\n        return;\n    }\n    if (player) {\n        return player;\n    }\n    // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n    // off a 250ms setInterval which will continually trigger change detection if we don't.\n    /** @type {?} */\n    const newPlayer = ngZone.runOutsideAngular((/**\n     * @return {?}\n     */\n    () => new YT.Player(container, videoOptions)));\n    // Bind videoId for future use.\n    newPlayer.videoId = videoOptions.videoId;\n    return newPlayer;\n}\n/**\n * Call cueVideoById if the videoId changes, or when start or end seconds change. cueVideoById will\n * change the loaded video id to the given videoId, and set the start and end times to the given\n * start/end seconds.\n * @param {?} playerObs\n * @param {?} videoIdObs\n * @param {?} startSecondsObs\n * @param {?} endSecondsObs\n * @param {?} suggestedQualityObs\n * @param {?} destroyed\n * @return {?}\n */\nfunction bindCueVideoCall(playerObs, videoIdObs, startSecondsObs, endSecondsObs, suggestedQualityObs, destroyed) {\n    /** @type {?} */\n    const cueOptionsObs = combineLatest([startSecondsObs, endSecondsObs])\n        .pipe(map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([startSeconds, endSeconds]) => ({ startSeconds, endSeconds }))));\n    // Only respond to changes in cue options if the player is not running.\n    /** @type {?} */\n    const filteredCueOptions = cueOptionsObs\n        .pipe(filterOnOther(playerObs, (/**\n     * @param {?} player\n     * @return {?}\n     */\n    player => !!player && !hasPlayerStarted(player))));\n    // If the video id changed, there's no reason to run 'cue' unless the player\n    // was initialized with a different video id.\n    /** @type {?} */\n    const changedVideoId = videoIdObs\n        .pipe(filterOnOther(playerObs, (/**\n     * @param {?} player\n     * @param {?} videoId\n     * @return {?}\n     */\n    (player, videoId) => !!player && player.videoId !== videoId)));\n    // If the player changed, there's no reason to run 'cue' unless there are cue options.\n    /** @type {?} */\n    const changedPlayer = playerObs.pipe(filterOnOther(combineLatest([videoIdObs, cueOptionsObs]), (/**\n     * @param {?} __0\n     * @param {?} player\n     * @return {?}\n     */\n    ([videoId, cueOptions], player) => !!player &&\n        (videoId != player.videoId || !!cueOptions.startSeconds || !!cueOptions.endSeconds))));\n    merge(changedPlayer, changedVideoId, filteredCueOptions)\n        .pipe(withLatestFrom(combineLatest([playerObs, videoIdObs, cueOptionsObs, suggestedQualityObs])), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([_, values]) => values)), takeUntil(destroyed))\n        .subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, videoId, cueOptions, suggestedQuality]) => {\n        if (!videoId || !player) {\n            return;\n        }\n        player.videoId = videoId;\n        player.cueVideoById(Object.assign({ videoId,\n            suggestedQuality }, cueOptions));\n    }));\n}\n/**\n * @param {?} player\n * @return {?}\n */\nfunction hasPlayerStarted(player) {\n    /** @type {?} */\n    const state = player.getPlayerState();\n    return state !== -1 /* UNSTARTED */ && state !== 5 /* CUED */;\n}\n/**\n * @param {?} player\n * @return {?}\n */\nfunction playerIsReady(player) {\n    return 'getPlayerStatus' in player;\n}\n/**\n * Combines the two observables temporarily for the filter function.\n * @template R, T\n * @param {?} otherObs\n * @param {?} filterFn\n * @return {?}\n */\nfunction filterOnOther(otherObs, filterFn) {\n    return pipe(withLatestFrom(otherObs), filter((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value, other]) => filterFn(other, value))), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value]) => value)));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/youtube-player/youtube-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst COMPONENTS = [YouTubePlayer];\nclass YouTubePlayerModule {\n}\nYouTubePlayerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: COMPONENTS,\n                exports: COMPONENTS,\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/youtube-player/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { YouTubePlayer, YouTubePlayerModule };\n//# sourceMappingURL=youtube-player.js.map\n"],"sourceRoot":"webpack:///","file":"default~add-link-add-link-module~create-comp-create-comp-module~tab2-tab2-module~tab3-tab3-module-es5.js"}